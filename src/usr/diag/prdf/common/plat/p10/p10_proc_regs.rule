# IBM_PROLOG_BEGIN_TAG
# This is an automatically generated prolog.
#
# $Source: src/usr/diag/prdf/common/plat/p10/p10_proc_regs.rule $
#
# OpenPOWER HostBoot Project
#
# Contributors Listed Below - COPYRIGHT 2020
# [+] International Business Machines Corp.
#
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
# implied. See the License for the specific language governing
# permissions and limitations under the License.
#
# IBM_PROLOG_END_TAG

################################################################################
# Additional registers for the PROC target
################################################################################

    # This register helps us determine where in the IPL the attention occurred.
    # Possible values for this register (in ASCII): hostboot, bootload, shutdown

# TODO: This address is currently experiencing SCOM errors. The Hostboot team is
#       investigating the reason and will get back to us when the issue is
#       resolved.
#    register CORE_SCRATCH_REG_3
#    {
#        name        "Core scratch register 3";
#        scomaddr    0x4602F489;
#        capture     group default;
#    };

    ############################################################################
    # HCA_FIR FFDC Regs
    ############################################################################

    register HCA_ERR_RPT_HOLD_REG
    {
        name        "HCA Error Report Hold Register";
        scomaddr    0x03011D56;
        capture     group hca_fir_ffdc;
    };

    ############################################################################
    # INT_CQ_FIR FFDC Regs
    ############################################################################

    register INT_CQ_ERR_RPT_HOLD
    {
        name        "INT CQ error report hold";
        scomaddr    0x02010839;
        capture     group int_cq_fir_ffdc;
    };

    register INT_CQ_ERR_INFO1
    {
        name        "INT CQ error info 1";
        scomaddr    0x0201083B;
        capture     group int_cq_fir_ffdc;
    };

    register INT_CQ_ERR_INFO2
    {
        name        "INT CQ error info 2";
        scomaddr    0x0201083C;
        capture     group int_cq_fir_ffdc;
    };

    register INT_CQ_ERR_INFO3
    {
        name        "INT CQ error info 3";
        scomaddr    0x0201083D;
        capture     group int_cq_fir_ffdc;
    };

    register INT_PC_ERR0_WOF
    {
        name        "INT PC Error0 WOF Register";
        scomaddr    0x02010AC2;
        capture     group int_cq_fir_ffdc;
    };

    register INT_PC_ERR0_WOF_DETAIL
    {
        name        "INT PC Error0 WOF Detail Register";
        scomaddr    0x02010AC3;
        capture     group int_cq_fir_ffdc;
    };

    register INT_PC_ERR0_FATAL
    {
        name        "INT PC Error0 Fatal Errors Register";
        scomaddr    0x02010AC4;
        capture     group int_cq_fir_ffdc;
    };

    register INT_PC_ERR0_RECOV
    {
        name        "INT PC Error0 Recoverable Errors Register";
        scomaddr    0x02010AC5;
        capture     group int_cq_fir_ffdc;
    };

    register INT_PC_ERR0_INFO
    {
        name        "INT PC Error0 Informational Errors Register";
        scomaddr    0x02010AC6;
        capture     group int_cq_fir_ffdc;
    };

    register INT_PC_ERR1_WOF
    {
        name        "INT PC Error1 WOF Register";
        scomaddr    0x02010ACA;
        capture     group int_cq_fir_ffdc;
    };

    register INT_PC_ERR1_WOF_DETAIL
    {
        name        "INT PC Error1 WOF Detail Register";
        scomaddr    0x02010ACB;
        capture     group int_cq_fir_ffdc;
    };

    register INT_PC_ERR1_FATAL
    {
        name        "INT PC Error1 Fatal Errors Register";
        scomaddr    0x02010ACC;
        capture     group int_cq_fir_ffdc;
    };

    register INT_PC_ERR1_RECOV
    {
        name        "INT PC Error1 Recoverable Errors Register";
        scomaddr    0x02010ACD;
        capture     group int_cq_fir_ffdc;
    };

    register INT_PC_ERR1_INFO
    {
        name        "INT PC Error1 Informational Errors Register";
        scomaddr    0x02010ACE;
        capture     group int_cq_fir_ffdc;
    };

    register INT_PC_NXC_WOF_ERR
    {
        name        "INT NXC WOF Register";
        scomaddr    0x02010AD2;
        capture     group int_cq_fir_ffdc;
    };

    register INT_PC_NXC_WOF_ERR_DETAIL
    {
        name        "INT NXC WOF Detail Register";
        scomaddr    0x02010AD3;
        capture     group int_cq_fir_ffdc;
    };

    register INT_PC_NXC_FATAL_ERR
    {
        name        "INT NXC Fatal Errors Register";
        scomaddr    0x02010AD4;
        capture     group int_cq_fir_ffdc;
    };

    register INT_PC_NXC_RECOV_ERR
    {
        name        "INT NXC Recoverable Errors Register";
        scomaddr    0x02010AD5;
        capture     group int_cq_fir_ffdc;
    };

    register INT_PC_NXC_INFO_ERR
    {
        name        "INT NXC Informational Errors Register";
        scomaddr    0x02010AD6;
        capture     group int_cq_fir_ffdc;
    };

    register INT_VC_WOF_ERR_G0
    {
        name        "INT VC Group0 WOF Register";
        scomaddr    0x020109C2;
        capture     group int_cq_fir_ffdc;
    };

    register INT_VC_WOF_ERR_G0_DETAIL
    {
        name        "INT VC Group0 WOF Detail Register";
        scomaddr    0x020109C3;
        capture     group int_cq_fir_ffdc;
    };

    register INT_VC_FATAL_ERR_G0
    {
        name        "INT VC Group0 Fatal Errors Register";
        scomaddr    0x020109C4;
        capture     group int_cq_fir_ffdc;
    };

    register INT_VC_RECOV_ERR_G0
    {
        name        "INT VC Group0 Recoverable Errors Register";
        scomaddr    0x020109C5;
        capture     group int_cq_fir_ffdc;
    };

    register INT_VC_INFO_ERR_G0
    {
        name        "INT VC Group0 Informational Errors Register";
        scomaddr    0x020109C6;
        capture     group int_cq_fir_ffdc;
    };

    register INT_VC_WOF_ERR_G1
    {
        name        "INT VC Group1 WOF Register";
        scomaddr    0x020109CA;
        capture     group int_cq_fir_ffdc;
    };

    register INT_VC_WOF_ERR_G1_DETAIL
    {
        name        "INT VC Group1 WOF Detail Register";
        scomaddr    0x020109CB;
        capture     group int_cq_fir_ffdc;
    };

    register INT_VC_FATAL_ERR_G1
    {
        name        "INT VC Group1 Fatal Errors Register";
        scomaddr    0x020109CC;
        capture     group int_cq_fir_ffdc;
    };

    register INT_VC_RECOV_ERR_G1
    {
        name        "INT VC Group1 Recoverable Errors Register";
        scomaddr    0x020109CD;
        capture     group int_cq_fir_ffdc;
    };

    register INT_VC_INFO_ERR_G1
    {
        name        "INT VC Group1 Informational Errors Register";
        scomaddr    0x020109CE;
        capture     group int_cq_fir_ffdc;
    };

    ############################################################################
    # NX_CQ_FIR FFDC Regs
    ############################################################################

    register NX_CQ_ERR_RPT_0
    {
        name        "NX CQ error report 0";
        scomaddr    0x020110A2;
        capture     group nx_cq_fir_ffdc;
    };

    register NX_CQ_ERR_RPT_1
    {
        name        "NX CQ error report 1";
        scomaddr    0x020110A1;
        capture     group nx_cq_fir_ffdc;
    };

    ############################################################################
    # NX_DMA_ENG_FIR FFDC Regs
    ############################################################################

    register SU_DMA_ERROR_REPORT_0
    {
        name        "DMA CERR Report Register 0";
        scomaddr    0x02011057;
        capture     group nx_dma_eng_fir_ffdc;
    };

    register SU_DMA_ERROR_REPORT_1
    {
        name        "DMA CERR Report Register 1";
        scomaddr    0x02011058;
        capture     group nx_dma_eng_fir_ffdc;
    };

    ############################################################################
    # OCC_FIR FFDC Regs
    ############################################################################

    register OCC_SCOM_ERR_RPT
    {
        name        "OCC Error Report";
        scomaddr    0x0101080A;
        capture     group occ_fir_ffdc;
    };

    register OCC_SCOM_ERR_RPT2
    {
        name        "OCC Error Report 2";
        scomaddr    0x0101080B;
        capture     group occ_fir_ffdc;
    };

    ############################################################################
    # PBAF_FIR FFDC Regs
    ############################################################################

    register PBA_ERR_RPT0
    {
        name        "PBA Error Report Register 0";
        scomaddr    0x03011DCC;
        capture     group pbaf_fir_ffdc;
    };

    register PBA_ERR_RPT1
    {
        name        "PBA Error Report Register 1";
        scomaddr    0x03011DCD;
        capture     group pbaf_fir_ffdc;
    };

    register PBA_ERR_RPT2
    {
        name        "PBA Error Report Register 2";
        scomaddr    0x03011DCE;
        capture     group pbaf_fir_ffdc;
    };

    ############################################################################
    # PBAO_FIR FFDC Regs
    ############################################################################

    register PBAO_ERR_RPT_1
    {
        name        "PBAO Error Report 1";
        scomaddr    0x01010CCD;
        capture     group pbao_fir_ffdc;
    };

    register PBAO_ERR_RPT_2
    {
        name        "PBAO Error Report 2";
        scomaddr    0x01010CCE;
        capture     group pbao_fir_ffdc;
    };

    ############################################################################
    # PLL FFDC Regs
    ############################################################################

    register CFAM_FSI_STATUS
    {
        name        "TP.TPVSB.FSI.W.FSI2PIB.STATUS";
        scomaddr    0x00001007;
        capture     group never; # captured via CFAM operation in PLL analysis
    };

    # When reading this virtual register, we can query bits 24:31 to determine
    # if there is a PLL error on at least one chiplet. This avoids looping on
    # all chiplets. This virtual register also gives us the ability to write the
    # same value to the PCBSLV_ERROR registers for all chiplets with a single
    # SCOM access.
    register BC_OR_PCBSLV_ERROR
    {
        name        "Broadcast OR of PCBSLV error registers from all chiplets";
        scomaddr    0x470F001F;
        capture     group pll_ffdc;
    };

    register RCS_SENSE_1
    {
        name        "RCS Sense 1 register";
        scomaddr    0x0005001D;
        capture     group pll_ffdc;
    };

    register TP_PCBSLV_CONFIG
    {
        name        "TP PCBSLV config register";
        scomaddr    0x010F001E;
        capture     group pll_ffdc;
    };

    register TP_PCBSLV_ERROR
    {
        name        "TP PCBSLV error register";
        scomaddr    0x010F001F;
        capture     group pll_ffdc;
    };

    register N0_PCBSLV_CONFIG
    {
        name        "N0 PCBSLV config register";
        scomaddr    0x020F001E;
        capture     group pll_ffdc;
    };

    register N0_PCBSLV_ERROR
    {
        name        "N0 PCBSLV error register";
        scomaddr    0x020F001F;
        capture     group pll_ffdc;
    };

    register N1_PCBSLV_CONFIG
    {
        name        "N1 PCBSLV config register";
        scomaddr    0x030F001E;
        capture     group pll_ffdc;
    };

    register N1_PCBSLV_ERROR
    {
        name        "N1 PCBSLV error register";
        scomaddr    0x030F001F;
        capture     group pll_ffdc;
    };

