/* IBM_PROLOG_BEGIN_TAG                                                   */
/* This is an automatically generated prolog.                             */
/*                                                                        */
/* $Source: src/include/usr/pldm/pldm_const.H $                           */
/*                                                                        */
/* OpenPOWER HostBoot Project                                             */
/*                                                                        */
/* Contributors Listed Below - COPYRIGHT 2020                             */
/* [+] International Business Machines Corp.                              */
/*                                                                        */
/*                                                                        */
/* Licensed under the Apache License, Version 2.0 (the "License");        */
/* you may not use this file except in compliance with the License.       */
/* You may obtain a copy of the License at                                */
/*                                                                        */
/*     http://www.apache.org/licenses/LICENSE-2.0                         */
/*                                                                        */
/* Unless required by applicable law or agreed to in writing, software    */
/* distributed under the License is distributed on an "AS IS" BASIS,      */
/* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or        */
/* implied. See the License for the specific language governing           */
/* permissions and limitations under the License.                         */
/*                                                                        */
/* IBM_PROLOG_END_TAG                                                     */
#ifndef PLDM_CONST_H
#define PLDM_CONST_H

/**
 * @file pldm_const.H
 * @brief Header file containing constants and types relating to PLDM
 */

typedef uint8_t mctp_eid_t;

namespace PLDM
{

    using terminus_id_t = uint16_t;

    // These are Entity Types used in Entity Association PDRs
    enum entity_type : uint8_t
    {
        // These values are from Table 15 in DSP0249 v1.1.0
        ENTITY_TYPE_BACKPLANE = 64,
        ENTITY_TYPE_DIMM = 66,
        ENTITY_TYPE_PROCESSOR_MODULE = 67
    };
    // These are the different types of PLDM message types we can expect
    // See DSP0245 v1.2.0 Table 1
    // When the MCTP layer creates a message to send to either inbound rsp
    // or inbound req queues it will set the msg->type to be the PLDM msg
    // type.
    enum msgq_msg_t
    {
        MSG_CONTROL_DISCOVERY = 0x00,
        MSG_SMBIOS            = 0x01,
        MSG_MONITOR_CONTROL   = 0x02,
        MSG_BIOS_CONTROL      = 0x03,
        MSG_OEM               = 0x3F
    };

    enum requester_rc_t
    {
        REQ_SUCCESS   = 0x00,
        REQ_FAILED    = 0x01
    };

    // BMC currently does not support multi-part PLDM
    // transmissions so we will ALWAYS send GET_FIRST_PART
    // as the TransferOperationFlag and the data transfer
    // handle will always be 0x00000000
    const uint8_t GET_FIRST_PART = 0x01;
    const uint8_t INITIAL_TRANS_HNDL = 0x00000000;
}

#endif